name: Publish Docker image

on:
  push:
    branches:
      - m@ster
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set version in package.json
        working-directory: ./
        run: |
          hash=$(echo "${{ github.sha }}" | cut -b -7)
          sed -i -e "s/\(\"version\": \".*\)\(\"\)/\\1-poskey-$hash\2/" package.json
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/misskey
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/misskey:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/misskey:latest
          labels: latest

  deploy-dev:
    name: Deploy to Dev Server
    needs: push_to_registry
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: https://mk-dev.xiupos.net/

    steps:
      - name: Deploy to Dev Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USERNAME }}
          key: ${{ secrets.DEV_SERVER_KEY }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          script: cd ${{ secrets.DEV_SERVER_PATH }} && bash update.sh -d

  deploy:
    name: Deploy to Server
    needs: push_to_registry
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://mk.xiupos.net/

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_SERVER_KEY }}
          port: ${{ secrets.PROD_SERVER_PORT }}
          script: cd ${{ secrets.PROD_SERVER_PATH }} && bash update.sh
